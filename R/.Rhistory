column_names_header <- cat("Column Names: ")
column_names <- cat(names(data_frame), sep=" | ")
cat(column_names_header, column_names, sep="")
message(nl, "Summary: ")
kbl(summary(data_frame))
setwd("C:/Users/patwea/OneDrive - Bellevue University/BU/R")
# Get top 5 rows
head(data_fram, 5)
# Get top 5 rows
head(data_frame, 5)
grep("^COST$", colnames(data_frame))
col_name <- "COST"
grep("^{col_name}$", colnames(data_frame))
col_name <- "COST"
grep("^",col_name,"$", colnames(data_frame))
col_name <- "COST"
col_name <- paste0("^",col_name,"$")
grep(col_name, colnames(data_frame))
# Change column name based on name
col_name_to_change <- "COST"
col_name <- paste0("^",col_name,"$")  # regular expression to get specific name, not where contains.
col_index <- grep(col_name, colnames(data_frame))
?grep
# Change column name based on name
col_name_to_change <- "COSt"
col_name <- paste0("^",col_name,"$")  # regular expression to get specific name, not where contains.
col_index <- grep(col_name, colnames(data_frame))  # pattern match column names
?grep
# Change column name based on name
col_name_to_change <- "COSt"
col_name <- paste0("^",col_name,"$")  # regular expression to get specific name, not where contains.
col_index <- grep(col_name, colnames(data_frame))  # pattern match column names
col_index
# Change column name based on name
col_name_to_change <- "COSTT"
col_name <- paste0("^",col_name,"$")  # regular expression to get specific name, not where contains.
col_index <- grep(col_name, colnames(data_frame))  # pattern match column names
col_index
# Change column name based on name
col_name_to_change <- "COSTTT"
col_name <- paste0("^",col_name,"$")  # regular expression to get specific name, not where contains.
col_index <- grep(col_name, colnames(data_frame))  # pattern match column names
col_index
# Change column name based on name
col_name_to_change <- "COS"
col_name <- paste0("^",col_name,"$")  # regular expression to get specific name, not where contains.
col_index <- grep(col_name, colnames(data_frame))  # pattern match column names
col_index
# Change column name based on name
col_name_to_change <- "COST"
col_name <- paste0("^",col_name,"$")  # regular expression to get specific name, not where contains.
col_index <- grep(col_name, colnames(data_frame))  # pattern match column names
col_index
# Change column name based on name
col_name_to_change <- "COSASDF"
col_name <- paste0("^",col_name,"$")  # regular expression to get specific name, not where contains.
col_index <- grep(col_name, colnames(data_frame))  # pattern match column names
col_index
# Change column name based on name
col_name_to_change <- "CASDKLJ"
col_name <- paste0("^",col_name,"$")  # regular expression to get specific name, not where contains.
col_index <- grep(col_name, colnames(data_frame))  # pattern match column names
col_index
# Change column name based on name
col_name_to_change <- ""
col_name <- paste0("^",col_name,"$")  # regular expression to get specific name, not where contains.
col_index <- grep(col_name, colnames(data_frame))  # pattern match column names
col_index
# Change column name based on name
col_name_to_change <- "ASDK"
col_name <- paste0("^",col_name,"$")  # regular expression to get specific name, not where contains.
col_index <- grep(col_name, colnames(data_frame))  # pattern match column names
col_index
# Change column name based on name
col_name_to_change <- "DATE"
col_name <- paste0("^",col_name,"$")  # regular expression to get specific name, not where contains.
col_index <- grep(col_name, colnames(data_frame))  # pattern match column names
col_index
colnames(data_frame)
data_frame[, "COST"]
data_frame[, "COST", "DATE"]
data_frame[, c("COST", "DATE")]
data_frame[, c("COfST", "DATE")]
data_frame[c("COST", "DATE")]
data_frame[c("COSt", "DATE")]
data_frame[c("COST", "DATE")]
col(data_frame)
?col
data_frame[["COST"]]
which(colnames(data_frame) == "COST")
column_names_to_change <- "COST"
columns_to_change <- which(colnames(data_frame) == column_names_to_change)
columns_to_change
column_names_to_change <- "DATE"
columns_to_change <- which(colnames(data_frame) == column_names_to_change)
columns_to_change
column_names_to_change <- c("DATE","COST")
columns_to_change <- which(colnames(data_frame) == column_names_to_change)
columns_to_change
column_names_to_change <- c("DATE","COST")
columns_to_change <- which(colnames(data_frame) == column_names_to_change)
columns_to_change
column_names_to_change <- c("DATE")
columns_to_change <- which(colnames(data_frame) == column_names_to_change)
columns_to_change
column_names_to_change <- "COST"
columns_to_change <- which(colnames(data_frame) == column_names_to_change)
names(data_frame)[columns_to_change] <- "ITEM_COST"
data_frame
column_names_to_change <- "ITEM_COST"
columns_to_change <- which(colnames(data_frame) == column_names_to_change)
names(data_frame)[columns_to_change] <- "COST"
data_frame
column_names_to_change <- "COST"
columns_to_change <- which(colnames(data_frame) == column_names_to_change)
names(data_frame)[columns_to_change] <- "ITEM_COST"
data_frame
column_names_to_change <- "COST"
columns_to_change <- which(colnames(data_frame) == column_names_to_change)
names(data_frame)[columns_to_change] <- "ITEM_COST"
data_frame
# Change column name based on column name
column_names_to_change <- "COST"
columns_to_change <- which(colnames(data_frame) == column_names_to_change)
names(data_frame)[columns_to_change] <- "COST_OF_ITEM"
# Change column name based on
names(data_frame)[7] <- "ITEM_COST"
data_frame
data_frame %>%
kableExtra::kbl() %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
)
mtcars
data()
iris
iris3
iris3
uspop
uspop
usarrests
usArrests
USArrests
USArrests
state.division
# USArrests
state.division
# USArrests
state.abb
# USArrests
state.name
# USArrests
state.x77
USArrests
state.x77
data_frame1 <- data.frame(
Item <- c("TV","Desk")
, Cost <- c(500,300)
)
data_frame2 <- data.frame(
Item <- c("Chair")
, Cost <- c(200)
)
rbind_data_frame <- rbind(data_frame1, data_frame2)
data_frame1 <- data.frame(
Item = c("TV","Desk")
, Cost = c(500,300)
)
data_frame2 <- data.frame(
Item = c("Chair")
, Cost = c(200)
)
rbind_data_frame <- rbind(data_frame1, data_frame2)
rbind_data_frame
rbind_data_frame %>%
kableExtra::kbl() %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
)
library(kableExtra)
data_frame1 <- data.frame(
Item = c("TV","Desk")
, Cost = c(500,300)
)
data_frame2 <- data.frame(
Item = c("Chair")
, Cost = c(200)
)
rbind_data_frame <- rbind(data_frame1, data_frame2)
rbind_data_frame
library(kableExtra)
data_frame1 %>%
kableExtra::kbl() %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
)
data_frame2 %>%
kableExtra::kbl() %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
)
rbind_data_frame %>%
kableExtra::kbl() %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
)
?kable_styling()
inner_join
merge_df1 <- data.frame(
ID = c("e100","e101","e102","e103")
, COLOR = c("Red","Green","Red","Blue")
)
merge_df2 <- data.frame(
ID = c("e100","e102","e103","e104")
, COST = c(100,250,15,75)
)
# Inner Join
inner_join <- merge(merge_df1, merge_df2, by.x = "ID", by.y = "ID")
# Left Join
left_join <- merge(merge_df1, merge_df2, by.x = "ID", by.y = "ID", all.x = TRUE)
# Right Join
right_join <- merge(merge_df1, merge_df2, by.x = "ID", by.y = "ID", all.y = TRUE)
# Full Join
full_join <- merge(merge_df1, merge_df2, by.x = "ID", by.y = "ID", all=TRUE)
inner_join
left_join
merge_df1 %>%
kableExtra::kbl(caption = "left_table") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
)
message("------------------------------------------------------")
merge_df2 %>%
kableExtra::kbl(caption = "right_table") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
)
message("------------------------------------------------------")
inner_join %>%
kableExtra::kbl(caption = "inner_join") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
)
message("------------------------------------------------------")
left_join %>%
kableExtra::kbl(caption = "left_join") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
)
message("------------------------------------------------------")
right_join %>%
kableExtra::kbl(caption = "right_join") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
)
message("------------------------------------------------------")
full_join %>%
kableExtra::kbl(caption = "full_join") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
)
merge_df1 %>%
kableExtra::kbl(caption = "left_table") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, position = "float_left"
, full_width = FALSE
)
merge_df2 %>%
kableExtra::kbl(caption = "right_table") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, position = "float_left"
, full_width = FALSE
)
inner_join %>%
kableExtra::kbl(caption = "inner_join") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
, position = "left"
)
left_join %>%
kableExtra::kbl(caption = "left_join") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
, position = "left"
)
right_join %>%
kableExtra::kbl(caption = "right_join") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
)
message("------------------------------------------------------")
full_join %>%
kableExtra::kbl(caption = "full_join") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
)
data_vect <- c(10,11,11,12,12,14,15,22,33,45,46,44,8,7,2,2,3,4,21)
hist(data_vect, col="#a56cf0", main="Histogram", xlab="Bucket", border="black")
# Use the table() function to first get frequency count. Then plot the results.
str_vector <- c("a","c","df","c","b","a","c","d","df")
barplot(table(str_vector), col="#a56cf0", main="Barplot", xlab="Element", border="black", ylab="Frequency")
# Use the table() function to first get frequency count. Then plot the results.
str_vector <- c("a","c","df","c","b","a","c","d","df")
barplot(table(str_vector), col="#a56cf0", main="Barplot", xlab="Element", border="black", ylab="Frequency")
# Use the table() function to first get frequency count. Then plot the results.
str_vector <- c("a","c","df","c","b","a","c","d","df")
barplot(table(str_vector), col="#a56cf0", main="Barplot", xlab="Element", border="black", ylab="Frequency")
data()
message(data())
?data
help(USArrests)
# R has built in Data Sets to work with.
data(mtcars)
# R has built in Data Sets to work with.
help(mtcars)
# R has built in Data Sets to work with.
# Example: mtcars
mtcars
# R has built in Data Sets to work with. To see a list of all built-in data sets run the function: data().
# For Example: mtcars
head(mtcars)
?head
# R has built in Data Sets to work with. To see a list of all built-in data sets run the function: data().
# For Example: mtcars
head(mtcars, 20)
data()
iris
iris[["Species"]]
iris[c(1)]
iris[c(1),]
iris["species"]
iris["Species"]
iris[c(1),]
iris[["Species"]]
iris[c(1),]
# iris[["Species"]]
iris[c(1,20,30,40,50,60,70,80,90,100,120,127),]
iris[["Species"]]
iris[c(1,20,30,40,50,60,70,80,90,100,120,127),]
iris_sub <- iris[c(1,20,30,40,50,60,70,80,90,100,120,126,127),]
iris_sub <- iris[c(1,20,30,40,50,60,70,80,90,100,120,126,127),]
iris_sub
# Filter iris data frame
iris_sub <- iris[c(1,50,60,70,80,90,100,120,126,127),]
# Add Row
# new_row_iris <- rbind(iris_sub, c())
# Filter iris data frame
iris_sub <- iris[c(1,50,60,70,80,90,100,120,126,127),]
iris_sub
# Add Row
# new_row_iris <- rbind(iris_sub, c())
# Filter iris data frame
iris_sub <- iris[c(1,50,60,120,126,127),]
iris_sub
# Add Row
# new_row_iris <- rbind(iris_sub, c())
# Filter iris data frame
iris_sub <- iris[c(1,50,60,70,120,127),]
iris_sub
# Add Row
# new_row_iris <- rbind(iris_sub, c())
# Filter iris data frame
iris_sub <- iris[c(1,50,60,70,120,127),]
iris_sub
# Add Row
new_row_iris <- rbind(iris_sub, c(5.3,3.2,1.5,0.3,"setosa"))
new_row_iris
# Remove Row
remove_row_iris <- new_row_iris[-c(3), ]  # remove 3rd row
remove_row_iris
# Filter iris data frame
iris_sub <- iris[c(1,50,60,70,80,120,127),]
iris_sub
# Add Row
new_row_iris <- rbind(iris_sub, c(5.3,3.2,1.5,0.3,"setosa"))
new_row_iris
# Remove Row
remove_row_iris <- new_row_iris[-c(3), ]  # remove 3rd row
remove_row_iris
# Filter iris data frame
iris_sub <- iris[c(1,50,60,70,80,120,127),]
iris_sub
# Add Row
new_row_iris <- rbind(iris_sub, c(5.3,3.2,1.5,0.3,"setosa"))
new_row_iris
# Remove Row
remove_row_iris <- new_row_iris[-c(3), ]  # remove 3rd row
remove_row_iris
# Add Column
new_col_iris <- cbind(remove_row_iris, Main.Color = c("white","yellow","purple","pink","yellow","purple","white"))
new_col_iris
# Filter iris data frame
iris_sub <- iris[c(1,50,60,70,80,120,127),]
iris_sub
# Add Row
new_row_iris <- rbind(iris_sub, c(5.3,3.2,1.5,0.3,"setosa"))
new_row_iris
# Remove Row
remove_row_iris <- new_row_iris[-c(3), ]  # remove 3rd row
remove_row_iris
# Add Column
new_col_iris <- cbind(remove_row_iris, Main.Color = c("white","yellow","purple","pink","yellow","purple","white"))
new_col_iris
# Remove Column
remove_col_iris <- new_col_iris[, -c(2)]  # remove 2nd column
remove_col_iris
library(kableExtra)
iris_sub %>%
kableExtra::kbl(caption = "Beginning Data Set") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
)
library(kableExtra)
iris_sub %>%
kableExtra::kbl(caption = "Beginning Data Set") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = T
, position = "left"
)
new_row_iris %>%
kableExtra::kbl(caption = "Add Row") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
, position = "float_left"
)
remove_row_iris %>%
kableExtra::kbl(caption = "Remove Row") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
, position = "left"
)
new_col_iris %>%
kableExtra::kbl(caption = "Add Column") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
, position = "float_left"
)
remove_col_iris %>%
kableExtra::kbl(caption = "Remove Column") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
, position = "left"
)
library(kableExtra)
iris_sub %>%
kableExtra::kbl(caption = "Beginning Data Set") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = T
, position = "left"
)
new_row_iris %>%
kableExtra::kbl(caption = "Add Row") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
, position = "float_left"
)
remove_row_iris %>%
kableExtra::kbl(caption = "Remove Row") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
, position = "left"
)
new_col_iris %>%
kableExtra::kbl(caption = "\nAdd Column") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
, position = "float_left"
)
remove_col_iris %>%
kableExtra::kbl(caption = "Remove Column") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
, position = "left"
)
library(kableExtra)
iris_sub %>%
kableExtra::kbl(caption = "Beginning Data Set") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
, position = "left"
)
new_row_iris %>%
kableExtra::kbl(caption = "Add Row") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
, position = "float_left"
)
remove_row_iris %>%
kableExtra::kbl(caption = "Remove Row") %>%
kableExtra::kable_styling(
bootstrap_options = c("striped","bordered","condensed")
, full_width = F
, position = "left"
)
