lm2_coef_df$`P-value` <-  round(lm2_coef_df$`P-value`, 3)
lm2_coef_df <- setDT(lm2_coef_df, keep.rownames = "Variables")[]
lm2_coef_df$` ` <- ifelse(lm2_coef_df$`P-value` < .001, "***", ifelse(lm2_coef_df$`P-value` < .01, "**", ifelse(lm2_coef_df$`P-value` < .05, "*", "")))
lm_model_df2 <- data.frame(
call = paste0(lm2_summ$call[1],lm2_summ$call[2])
, fstat = lm2_summ$fstatistic[1]
, adj.r.squared = lm2_summ$adj.r.squared
)
lm2_adj_r_squared <- lm2_summ$adj.r.squared
lm2_hard_hit_beta <- lm2_summ$coefficients[3,1]
lm2_hard_hit_p <- lm2_summ$coefficients[3,4]
lm2_league_whip_beta <- lm2_summ$coefficients[2,1]
lm2_league_whip_p <- lm2_summ$coefficients[2,4]
saveRDS(object = list=c(lm2_adj_r_squared,lm2_hard_hit_beta, lm2_league_whip_beta, lm2_league_whip_p), file = 'mean.rds')
lm2 <- lm(OPS ~ `League WHIP` + `Hard Hit %`, data=train_df)
lm2_summ <- summary(lm2)
lm2_coef_df <- data.frame(lm2_summ$coefficients[-1, c("Estimate", "Pr(>|t|)")])
lm2_coef_df <- select(lm2_coef_df, Estimate=Estimate, `P-value`=`Pr...t..`)
lm2_coef_df$`P-value` <-  round(lm2_coef_df$`P-value`, 3)
lm2_coef_df <- setDT(lm2_coef_df, keep.rownames = "Variables")[]
lm2_coef_df$` ` <- ifelse(lm2_coef_df$`P-value` < .001, "***", ifelse(lm2_coef_df$`P-value` < .01, "**", ifelse(lm2_coef_df$`P-value` < .05, "*", "")))
lm_model_df2 <- data.frame(
call = paste0(lm2_summ$call[1],lm2_summ$call[2])
, fstat = lm2_summ$fstatistic[1]
, adj.r.squared = lm2_summ$adj.r.squared
)
lm2_adj_r_squared <- lm2_summ$adj.r.squared
lm2_hard_hit_beta <- lm2_summ$coefficients[3,1]
lm2_hard_hit_p <- lm2_summ$coefficients[3,4]
lm2_league_whip_beta <- lm2_summ$coefficients[2,1]
lm2_league_whip_p <- lm2_summ$coefficients[2,4]
saveRDS(object = list=c(lm2_adj_r_squared,lm2_hard_hit_beta, lm2_league_whip_beta, lm2_league_whip_p), 'mean.rds')
lm2 <- lm(OPS ~ `League WHIP` + `Hard Hit %`, data=train_df)
lm2_summ <- summary(lm2)
lm2_coef_df <- data.frame(lm2_summ$coefficients[-1, c("Estimate", "Pr(>|t|)")])
lm2_coef_df <- select(lm2_coef_df, Estimate=Estimate, `P-value`=`Pr...t..`)
lm2_coef_df$`P-value` <-  round(lm2_coef_df$`P-value`, 3)
lm2_coef_df <- setDT(lm2_coef_df, keep.rownames = "Variables")[]
lm2_coef_df$` ` <- ifelse(lm2_coef_df$`P-value` < .001, "***", ifelse(lm2_coef_df$`P-value` < .01, "**", ifelse(lm2_coef_df$`P-value` < .05, "*", "")))
lm_model_df2 <- data.frame(
call = paste0(lm2_summ$call[1],lm2_summ$call[2])
, fstat = lm2_summ$fstatistic[1]
, adj.r.squared = lm2_summ$adj.r.squared
)
lm2_adj_r_squared <- lm2_summ$adj.r.squared
lm2_hard_hit_beta <- lm2_summ$coefficients[3,1]
lm2_hard_hit_p <- lm2_summ$coefficients[3,4]
lm2_league_whip_beta <- lm2_summ$coefficients[2,1]
lm2_league_whip_p <- lm2_summ$coefficients[2,4]
saveRDS(lm2_adj_r_squared, 'adjr.rds')
saveRDS(lm2_hard_hit_beta, 'hard_hit_beta.rds')
saveRDS(lm2_hard_hit_p, 'hard_hit_p.rds')
saveRDS(lm2_league_whip_beta, 'whip_beta.rds')
saveRDS(lm2_league_whip_p, 'whip_p.rds')
lm2_adj_r_squared <- if (file.exists('adjr.rds')) {
readRDS('mean.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_hard_hit_beta <- if (file.exists('hard_hit_beta.rds')) {
readRDS('mean.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_hard_hit_p <- if (file.exists('hard_hit_p.rds')) {
readRDS('mean.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_league_whip_beta <- if (file.exists('whip_beta.rds')) {
readRDS('mean.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_league_whip_p <- if (file.exists('whip_p.rds')) {
readRDS('mean.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
View(lm2_summ)
lm2_summ
lm2_summ$aliased
lm2_summ$sigma
lm2_summ
lm2_summ$sigma
lm2_summ$terms
lm2_summ$cov.unscaled
lm2_summ$coefficients
lm2_summ
lm2_summ$fstatistic
names(lm2_summ)
anova(lm2)
lm2_p
lm2_p <- attributes(pf(lm2_summ$fstatistic[1], lm2_summ$fstatistic[2], lm2_summ$fstatistic[3], lower.tail = FALSE)) <- NULL
lm2_p <- pf(lm2_summ$fstatistic[1], lm2_summ$fstatistic[2], lm2_summ$fstatistic[3], lower.tail = FALSE)
attributes(lm2_p) <- NULL
lm2_summ
lm2_p
lm2_p
lm2_p
lm2_summ
lm2_p <- pf(lm2_summ$fstatistic[1], lm2_summ$fstatistic[2], lm2_summ$fstatistic[3], lower.tail = FALSE)
lm2_p
lm2_summ
lm2_p
lm2_summ
round(lm2_summ)
lm2_summ
lm2 <- lm(OPS ~ `League WHIP` + `Hard Hit %`, data=train_df)
lm2_summ <- summary(lm2)
lm2_coef_df <- data.frame(lm2_summ$coefficients[-1, c("Estimate", "Pr(>|t|)")])
lm2_coef_df <- select(lm2_coef_df, Estimate=Estimate, `P-value`=`Pr...t..`)
lm2_coef_df$`P-value` <-  round(lm2_coef_df$`P-value`, 3)
lm2_coef_df <- setDT(lm2_coef_df, keep.rownames = "Variables")[]
lm2_coef_df$` ` <- ifelse(lm2_coef_df$`P-value` < .001, "***", ifelse(lm2_coef_df$`P-value` < .01, "**", ifelse(lm2_coef_df$`P-value` < .05, "*", "")))
lm_model_df2 <- data.frame(
call = paste0(lm2_summ$call[1],lm2_summ$call[2])
, fstat = lm2_summ$fstatistic[1]
, adj.r.squared = lm2_summ$adj.r.squared
)
lm2_adj_r_squared <- lm2_summ$adj.r.squared
lm2_hard_hit_beta <- lm2_summ$coefficients[3,1]
lm2_hard_hit_p <- lm2_summ$coefficients[3,4]
lm2_league_whip_beta <- lm2_summ$coefficients[2,1]
lm2_league_whip_p <- lm2_summ$coefficients[2,4]
saveRDS(lm2_adj_r_squared, 'adjr.rds')
saveRDS(lm2_hard_hit_beta, 'hard_hit_beta.rds')
saveRDS(lm2_hard_hit_p, 'hard_hit_p.rds')
saveRDS(lm2_league_whip_beta, 'whip_beta.rds')
saveRDS(lm2_league_whip_p, 'whip_p.rds')
lm2_summ
lm2_p <- pf(lm2_summ$fstatistic[1], lm2_summ$fstatistic[2], lm2_summ$fstatistic[3], lower.tail = FALSE)
lm2_p
lm2_summ
lm2_adj_r_squared
lm2_hard_hit_beta
lm2_hard_hit_p
lm2_league_whip_beta
lm2_league_whip_p
saveRDS(lm2_adj_r_squared, 'adjr.rds')
saveRDS(lm2_hard_hit_beta, 'hard_hit_beta.rds')
saveRDS(lm2_hard_hit_p, 'hard_hit_p.rds')
saveRDS(lm2_league_whip_beta, 'whip_beta.rds')
saveRDS(lm2_league_whip_p, 'whip_p.rds')
lm2_adj_r_squared <- if (file.exists('adjr.rds')) {
readRDS('adjr.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_hard_hit_beta <- if (file.exists('hard_hit_beta.rds')) {
readRDS('hard_hit_beta.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_hard_hit_p <- if (file.exists('hard_hit_p.rds')) {
readRDS('hard_hit_p.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_league_whip_beta <- if (file.exists('whip_beta.rds')) {
readRDS('whip_beta.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_league_whip_p <- if (file.exists('whip_p.rds')) {
readRDS('whip_p.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2 <- lm(OPS ~ `League WHIP` + `Hard Hit %`, data=train_df)
lm2_summ <- summary(lm2)
lm2_coef_df <- data.frame(lm2_summ$coefficients[-1, c("Estimate", "Pr(>|t|)")])
lm2_coef_df <- select(lm2_coef_df, Estimate=Estimate, `P-value`=`Pr...t..`)
lm2_coef_df$`P-value` <-  round(lm2_coef_df$`P-value`, 3)
lm2_coef_df <- setDT(lm2_coef_df, keep.rownames = "Variables")[]
lm2_coef_df$` ` <- ifelse(lm2_coef_df$`P-value` < .001, "***", ifelse(lm2_coef_df$`P-value` < .01, "**", ifelse(lm2_coef_df$`P-value` < .05, "*", "")))
lm_model_df2 <- data.frame(
call = paste0(lm2_summ$call[1],lm2_summ$call[2])
, fstat = lm2_summ$fstatistic[1]
, adj.r.squared = lm2_summ$adj.r.squared
)
lm2_adj_r_squared <- lm2_summ$adj.r.squared
lm2_hard_hit_beta <- lm2_summ$coefficients[3,1]
lm2_hard_hit_p <- lm2_summ$coefficients[3,4]
lm2_league_whip_beta <- lm2_summ$coefficients[2,1]
lm2_league_whip_p <- lm2_summ$coefficients[2,4]
saveRDS(lm2_adj_r_squared, 'adjr.rds')
saveRDS(lm2_hard_hit_beta, 'hard_hit_beta.rds')
saveRDS(lm2_hard_hit_p, 'hard_hit_p.rds')
saveRDS(lm2_league_whip_beta, 'whip_beta.rds')
saveRDS(lm2_league_whip_p, 'whip_p.rds')
lm2_adj_r_squared
lm2_hard_hit_beta
lm2_hard_hit_p
lm2_league_whip_beta
lm2_league_whip_p
aic_summ <- data.frame(AICcmodavg::aictab(model_list, modnames=model_names))
model_list <- list(lm1, lm2)
model_names <- c("lm1", "lm2")
FitFlextableToPage( fontsize(theme_vanilla(flextable(aic_summ)), size=8, part="all") )
aic_summ <- data.frame(AICcmodavg::aictab(model_list, modnames=model_names))
FitFlextableToPage( fontsize(theme_vanilla(flextable(aic_summ)), size=8, part="all") )
model_list <- list(lm1, lm2)
model_names <- c("lm1", "lm2")
aic_summ <- data.frame(AICcmodavg::aictab(model_list, modnames=model_names))
FitFlextableToPage( fontsize(theme_vanilla(flextable(aic_summ)), size=8, part="all") )
model_list <- list()
model_list[[1]] <- lm1
model_list[[2]] <- lm2
model_names <- c("lm1", "lm2")
aic_summ <- data.frame(AICcmodavg::aictab(model_list, modnames=model_names))
FitFlextableToPage( fontsize(theme_vanilla(flextable(aic_summ)), size=8, part="all") )
lm2 <- lm(OPS ~ `League WHIP` + `Hard Hit %`, data=train_df)
lm2_summ <- summary(lm2)
lm2_coef_df <- data.frame(lm2_summ$coefficients[-1, c("Estimate", "Pr(>|t|)")])
lm2_coef_df <- select(lm2_coef_df, Estimate=Estimate, `P-value`=`Pr...t..`)
lm2_adj_r_squared <- if (file.exists('adjr.rds')) {
readRDS('adjr.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_hard_hit_beta <- if (file.exists('hard_hit_beta.rds')) {
readRDS('hard_hit_beta.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_hard_hit_p <- if (file.exists('hard_hit_p.rds')) {
readRDS('hard_hit_p.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_league_whip_beta <- if (file.exists('whip_beta.rds')) {
readRDS('whip_beta.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_league_whip_p <- if (file.exists('whip_p.rds')) {
readRDS('whip_p.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
## packages used
library(RSQLite)
library(kableExtra)
library(Lahman)
library(ggplot2)
library(dplyr)
library(flextable)
library(class)
library(PerformanceAnalytics)
library(VIM)
library(Hmisc)
library(corrplot)
library(data.table)
library(broom)
library(AICcmodavg)
library(car)
## Lahman Data
data(Batting, package="Lahman")
data(People, package="Lahman")
data(Salaries, package="Lahman")
## FanGraph Data
# Batting Data
setwd("C:/Users/patwea/OneDrive - Bellevue University/BU/DSC 520 - Statistics for Data Science/Patrick.Weatherford-DSC520/Assignments/Term Project/Baseball Data/FanGraphs")
filenames <- list.files(full.names=TRUE)
fangraph_dfs <- lapply(filenames, function(i) {
read.csv(i, header=FALSE, skip=1)
})
fg_batting_df <- do.call(rbind.data.frame, fangraph_dfs)
fg_batting_df <- dplyr::select(fg_batting_df
, `Name`="V1"
, `Team`="V2"
, `Age`="V3"
, `Strikeout%`="V4"
, `Walk%`="V5"
, `OPS`="V6"
, `GroundBall%`="V7"
, `OutsideZoneSwing%`="V8"
, `Swing%`="V9"
, `HardHit%`="V10"
, `PlayerID`="V11"
, `Year`="V12")
fg_batting_df$Year <- as.numeric(fg_batting_df$Year)
fg_batting_df$Age <- as.numeric(fg_batting_df$Age)
# League WHIP
setwd("C:/Users/patwea/OneDrive - Bellevue University/BU/DSC 520 - Statistics for Data Science/Patrick.Weatherford-DSC520/Assignments/Term Project/Baseball Data/FanGraphs2")
filenames <- list.files(full.names=TRUE)
fangraph_dfs <- lapply(filenames, function(i) {
read.csv(i, header=FALSE, skip=1)
})
league_whip <- do.call(rbind.data.frame, fangraph_dfs)
league_whip <- dplyr::select(league_whip
, `Year`="V1"
, `K/9`="V2"
, `BB/9`="V3"
, `GB%`="V4"
, `HR/FB`="V5"
, `OPS`="V6"
, `ERA`="V7"
, `WAR`="V8"
, `LEAGUE_WHIP`="V9"
, `League`="V10")
## Joining Data Together
Lahman_df <- Batting %>%
dplyr::filter(yearID >= 2010 & yearID <= 2020) %>%
dplyr::inner_join(People, by="playerID") %>%
dplyr::mutate(FULL_NAME=paste0(nameFirst, " ", nameLast)) %>%
dplyr::inner_join(fg_batting_df, by=c("FULL_NAME"="Name", "yearID"="Year")) %>%
dplyr::inner_join(league_whip, by=c("lgID"="League", "yearID"="Year")) %>%
dplyr::mutate(BMI = round(703 * weight/((height)^2), 2)) %>%
dplyr::select(
Name=FULL_NAME
, Year=yearID
, Age=Age
, Bats=bats
, BMI=BMI
, Team=teamID
# , League=lgID
, `League WHIP`=LEAGUE_WHIP
# , `Strike Outs`=SO
# , `Intentional Walks`=IBB
# , `Hit by Pitch`=HBP
# , `Strike Out %`="Strikeout%"
# , `Walk %`="Walk%"
, OPS=OPS.x
# , `Groundball %`="GroundBall%"
, `Out of Zone Swing %`="OutsideZoneSwing%"
, `Swing %`="Swing%"
, `Hard Hit %`="HardHit%"
)
FitFlextableToPage <- function(ft, pgwidth = 6){
ft_out <- ft %>% autofit()
ft_out <- width(ft_out, width = dim(ft_out)$widths*pgwidth /(flextable_dim(ft_out)$widths))
return(ft_out)
}
head_df <- head(Lahman_df, 15)
tail_df <- tail(Lahman_df, 15)
FitFlextableToPage( fontsize(theme_vanilla(flextable(rbind(head_df, tail_df))), size=7, part="all") )
Lahman_df %>%
ggplot(aes(x=OPS)) +
geom_histogram(col="white", binwidth = .01) +
labs(x = "OPS\n(Bin Size = .01)", y = "Frequency")
ggplot(data = Lahman_df, mapping = aes(x=Age, y=OPS)) + geom_point() + geom_smooth(method = "lm", formula = y~x)
ggplot(data = Lahman_df, mapping = aes(x=BMI, y=OPS)) + geom_point() + geom_smooth(method = "lm", formula = y~x)
ggplot(data = Lahman_df, mapping = aes(x=`League WHIP`, y=OPS)) + geom_point() + geom_smooth(method = "lm", formula = y~x)
ggplot(data = Lahman_df, mapping = aes(x=`Out of Zone Swing %`, y=OPS)) + geom_point() + geom_smooth(method = "lm", formula = y~x)
ggplot(data = Lahman_df, mapping = aes(x=`Swing %`, y=OPS)) + geom_point() + geom_smooth(method = "lm", formula = y~x)
ggplot(data = Lahman_df, mapping = aes(x=`Hard Hit %`, y=OPS)) + geom_point() + geom_smooth(method = "lm", formula = y~x)
ggplot(data = Lahman_df, mapping = aes(x=Bats, y=OPS)) + geom_boxplot()
#
## Remove 'Name', 'Team', 'Year' columns from Data Set
Lahman_df <- dplyr::select(Lahman_df, -`Name`, -`Team`, -`Year`)
## Create Training and Testing Data Sets
smp_size <- floor(0.75 * nrow(Lahman_df))
set.seed(777)
train_ind <- sample(seq_len(nrow(Lahman_df)), size = smp_size)
train_df <- Lahman_df[train_ind, ]
test_df <- Lahman_df[-train_ind, ]
## Turn 'Bats' in factor
Lahman_df$Bats <- as.factor(Lahman_df$Bats)
lm1 <- lm(OPS ~ ., data=train_df)
lm1_summ <- summary(lm1)
lm1_coef_df <- data.frame(lm1_summ$coefficients[-1, c("Estimate", "Pr(>|t|)")])
lm1_coef_df <- select(lm1_coef_df, Estimate=Estimate, `P-value`=`Pr...t..`)
lm1_coef_df$`P-value` <-  round(lm1_coef_df$`P-value`, 3)
lm1_coef_df <- setDT(lm1_coef_df, keep.rownames = "Variables")[]
lm1_coef_df$` ` <- ifelse(lm1_coef_df$`P-value` < .001, "***", ifelse(lm1_coef_df$`P-value` < .01, "**", ifelse(lm1_coef_df$`P-value` < .05, "*", "")))
lm_model_df <- data.frame(
call = paste0(lm1_summ$call[1],lm1_summ$call[2])
, fstat = lm1_summ$fstatistic[1]
, adj.r.squared = lm1_summ$adj.r.squared
)
FitFlextableToPage( fontsize(theme_vanilla(flextable(lm_model_df)), size=8, part="all") )
FitFlextableToPage( fontsize(theme_vanilla(flextable(lm1_coef_df)), size=8, part="all") )
lm2 <- lm(OPS ~ `League WHIP` + `Hard Hit %`, data=train_df)
lm2_summ <- summary(lm2)
lm2_coef_df <- data.frame(lm2_summ$coefficients[-1, c("Estimate", "Pr(>|t|)")])
lm2_coef_df <- select(lm2_coef_df, Estimate=Estimate, `P-value`=`Pr...t..`)
lm2_coef_df$`P-value` <-  round(lm2_coef_df$`P-value`, 3)
lm2_coef_df <- setDT(lm2_coef_df, keep.rownames = "Variables")[]
lm2_coef_df$` ` <- ifelse(lm2_coef_df$`P-value` < .001, "***", ifelse(lm2_coef_df$`P-value` < .01, "**", ifelse(lm2_coef_df$`P-value` < .05, "*", "")))
lm_model_df2 <- data.frame(
call = paste0(lm2_summ$call[1],lm2_summ$call[2])
, fstat = lm2_summ$fstatistic[1]
, adj.r.squared = lm2_summ$adj.r.squared
)
lm2_adj_r_squared <- lm2_summ$adj.r.squared
lm2_hard_hit_beta <- lm2_summ$coefficients[3,1]
lm2_hard_hit_p <- lm2_summ$coefficients[3,4]
lm2_hard_hit_p <- ifelse(lm2_hard_hit_p < .001, " < .001"
, ifelse(lm2_hard_hit_p < .01, " < .01"
, ifelse(lm2_hard_hit_p < .05, " < .05", "*Not significant")))
lm2_league_whip_beta <- lm2_summ$coefficients[2,1]
lm2_league_whip_p <- lm2_summ$coefficients[2,4]
lm2_league_whip_p <- ifelse(lm2_league_whip_p < .001, " < .001"
, ifelse(lm2_league_whip_p < .01, " < .01"
, ifelse(lm2_league_whip_p < .05, " < .05", "*Not significant")))
saveRDS(lm2_adj_r_squared, 'adjr.rds')
saveRDS(lm2_hard_hit_beta, 'hard_hit_beta.rds')
saveRDS(lm2_hard_hit_p, 'hard_hit_p.rds')
saveRDS(lm2_league_whip_beta, 'whip_beta.rds')
saveRDS(lm2_league_whip_p, 'whip_p.rds')
lm2_adj_r_squared <- if (file.exists('adjr.rds')) {
readRDS('adjr.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_hard_hit_beta <- if (file.exists('hard_hit_beta.rds')) {
readRDS('hard_hit_beta.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_hard_hit_p <- if (file.exists('hard_hit_p.rds')) {
readRDS('hard_hit_p.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_league_whip_beta <- if (file.exists('whip_beta.rds')) {
readRDS('whip_beta.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_league_whip_p <- if (file.exists('whip_p.rds')) {
readRDS('whip_p.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_adj_r_squared <- if (file.exists('adjr.rds')) {
readRDS('adjr.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_hard_hit_beta <- if (file.exists('hard_hit_beta.rds')) {
readRDS('hard_hit_beta.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_hard_hit_p <- if (file.exists('hard_hit_p.rds')) {
readRDS('hard_hit_p.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_league_whip_beta <- if (file.exists('whip_beta.rds')) {
readRDS('whip_beta.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
lm2_league_whip_p <- if (file.exists('whip_p.rds')) {
readRDS('whip_p.rds')
} else {
"**No value. Try generating .docx again in Knitr"
}
## packages used
library(RSQLite)
library(kableExtra)
library(Lahman)
library(ggplot2)
library(dplyr)
library(flextable)
library(class)
library(PerformanceAnalytics)
library(VIM)
library(Hmisc)
library(corrplot)
library(data.table)
library(broom)
library(AICcmodavg)
library(car)
## packages used
library(RSQLite)
library(kableExtra)
library(Lahman)
library(ggplot2)
library(dplyr)
library(flextable)
library(class)
library(PerformanceAnalytics)
library(VIM)
library(Hmisc)
library(corrplot)
library(data.table)
library(broom)
library(AICcmodavg)
library(car)
lm2 <- lm(OPS ~ `League WHIP` + `Hard Hit %`, data=train_df)
lm2_summ <- summary(lm2)
lm2_coef_df <- data.frame(lm2_summ$coefficients[-1, c("Estimate", "Pr(>|t|)")])
lm2_coef_df <- select(lm2_coef_df, Estimate=Estimate, `P-value`=`Pr...t..`)
lm2_coef_df$`P-value` <-  round(lm2_coef_df$`P-value`, 3)
lm2_coef_df <- setDT(lm2_coef_df, keep.rownames = "Variables")[]
lm2_coef_df$` ` <- ifelse(lm2_coef_df$`P-value` < .001, "***", ifelse(lm2_coef_df$`P-value` < .01, "**", ifelse(lm2_coef_df$`P-value` < .05, "*", "")))
lm_model_df2 <- data.frame(
call = paste0(lm2_summ$call[1],lm2_summ$call[2])
, fstat = lm2_summ$fstatistic[1]
, adj.r.squared = lm2_summ$adj.r.squared
)
lm2_adj_r_squared <- lm2_summ$adj.r.squared
lm2_hard_hit_beta <- lm2_summ$coefficients[3,1]
lm2_hard_hit_p <- lm2_summ$coefficients[3,4]
lm2_hard_hit_p <- ifelse(lm2_hard_hit_p < .001, " < .001"
, ifelse(lm2_hard_hit_p < .01, " < .01"
, ifelse(lm2_hard_hit_p < .05, " < .05", "*Not significant")))
lm2_league_whip_beta <- lm2_summ$coefficients[2,1]
lm2_league_whip_p <- lm2_summ$coefficients[2,4]
lm2_league_whip_p <- ifelse(lm2_league_whip_p < .001, " < .001"
, ifelse(lm2_league_whip_p < .01, " < .01"
, ifelse(lm2_league_whip_p < .05, " < .05", "*Not significant")))
saveRDS(lm2_adj_r_squared, 'adjr.rds')
saveRDS(lm2_hard_hit_beta, 'hard_hit_beta.rds')
saveRDS(lm2_hard_hit_p, 'hard_hit_p.rds')
saveRDS(lm2_league_whip_beta, 'whip_beta.rds')
saveRDS(lm2_league_whip_p, 'whip_p.rds')
