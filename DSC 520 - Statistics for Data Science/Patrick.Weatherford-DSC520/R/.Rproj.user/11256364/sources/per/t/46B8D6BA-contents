---
title: "MLB Hitter Analysis"
author: "Patrick Weatherford"
output:
  word_document:
    reference_docx: Reference.docx
bibliography: bibliography.bib
---


:::{custom-style="Title 2"}
Bellevue University - DSC 520 Statistics for Data Science
:::

```{r, include=FALSE}
lm2_adj_r_squared <- if (file.exists('adjr.rds')) {
  readRDS('adjr.rds')
} else {
  "**No value. Try generating .docx again in Knitr"
}

lm2_hard_hit_beta <- if (file.exists('hard_hit_beta.rds')) {
  readRDS('hard_hit_beta.rds')
} else {
  "**No value. Try generating .docx again in Knitr"
}

lm2_hard_hit_p <- if (file.exists('hard_hit_p.rds')) {
  readRDS('hard_hit_p.rds')
} else {
  "**No value. Try generating .docx again in Knitr"
}

lm2_league_whip_beta <- if (file.exists('whip_beta.rds')) {
  readRDS('whip_beta.rds')
} else {
  "**No value. Try generating .docx again in Knitr"
}

lm2_league_whip_p <- if (file.exists('whip_p.rds')) {
  readRDS('whip_p.rds')
} else {
  "**No value. Try generating .docx again in Knitr"
}

```


\newpage

```{r, echo=FALSE, warning=FALSE, message=FALSE}

## packages used
library(RSQLite)
library(kableExtra)
library(Lahman)
library(ggplot2)
library(dplyr)
library(flextable)
library(class)
library(PerformanceAnalytics)
library(VIM)
library(Hmisc)
library(corrplot)
library(data.table)
library(broom)
library(AICcmodavg)
library(car)

```

# Abstract
  In the Major League Baseball association (MLB), there are many different statistics used to determine how well a player is batting, one of which is On-Base Plus Slugging Percent (OPS). This batting statistic takes into account On-Base Percent (OBP) and Slugging Percent (SLG) and is considered by many to be a good statistic for measuring batting performance. For this analysis multiple linear regression was used to test various variables and their correlation, if any,  with OPS. Backward elimination of variables was used for feature selection. The final linear regression model selected included Hard Hit % and League WHIP and was significant at (R^2^ = `r round(lm2_adj_r_squared,2)`, p = <.001). It was found that Hard Hit % was statistically significant (b = `r round(lm2_hard_hit_beta,2)`, p`r lm2_hard_hit_p`) and League WHIP was statistically significant (b = `r round(lm2_league_whip_beta,2)`, p`r lm2_league_whip_p`). The variables Age, Batting Hand, BMI, Out of Zone Swing %, and Swing % were excluded from the model and were not statistically significant at p < .05. 

\newpage 

# Introduction

  Although Batting Average is more commonly reported which is the total number of hits per at-bat, the statistic does not take into account walks, hit by pitch, or the average total number of bases reached per bat. For this reason, OPS is considered superior by many for it's ability to report the total number of bases per plate appearance and not just hits per plate appearance.

:::{custom-style="Equation"}
$OPS={OBP}+{SLG}$
:::
:::{custom-style="Equation"}
$OBP=\frac{Hits+Walks+Hit By Pitch}{Total Plate Appearances}$
:::
:::{custom-style="Equation"}
$SLG=\frac{Total Bases}{Total Plate Appearances - Walks - Sacrifice Hit - Hit By Pitch}$
:::

  For this analysis, variables will be assessed to determine if if they explain or predict the outcome variable On-Base Plus Slugging Percent (OPS). In order to assess and measure predictor variables with a potential effect on this outcome, various data sets will be obtained and filtered prior to analysis. 

\newpage

# Hypothesis
  Based on the initial data found, the below variables were chosen for testing and are assumed to be indicators which may potentially explain or predict OPS. Data analysis using a combination of linear vs. logistical regression was performed on the variables to help determine if the variables are likely correlated and if so, if they are statistically significant. 
  
```{r, echo=FALSE, warning=FALSE, results='hide'}
## Lahman Data
data(Batting, package="Lahman")
data(People, package="Lahman")
data(Salaries, package="Lahman")

## FanGraph Data
# Batting Data
setwd("C:/Users/patwea/OneDrive - Bellevue University/BU/DSC 520 - Statistics for Data Science/Patrick.Weatherford-DSC520/Assignments/Term Project/Baseball Data/FanGraphs")

filenames <- list.files(full.names=TRUE)

fangraph_dfs <- lapply(filenames, function(i) {
  read.csv(i, header=FALSE, skip=1)
})

fg_batting_df <- do.call(rbind.data.frame, fangraph_dfs)

fg_batting_df <- dplyr::select(fg_batting_df
              , `Name`="V1"
              , `Team`="V2"
              , `Age`="V3"
              , `Strikeout%`="V4"
              , `Walk%`="V5"
              , `OPS`="V6"
              , `GroundBall%`="V7"
              , `OutsideZoneSwing%`="V8"
              , `Swing%`="V9"
              , `HardHit%`="V10"
              , `PlayerID`="V11"
              , `Year`="V12")

fg_batting_df$Year <- as.numeric(fg_batting_df$Year)
fg_batting_df$Age <- as.numeric(fg_batting_df$Age)

# League WHIP
setwd("C:/Users/patwea/OneDrive - Bellevue University/BU/DSC 520 - Statistics for Data Science/Patrick.Weatherford-DSC520/Assignments/Term Project/Baseball Data/FanGraphs2")

filenames <- list.files(full.names=TRUE)

fangraph_dfs <- lapply(filenames, function(i) {
  read.csv(i, header=FALSE, skip=1)
})

league_whip <- do.call(rbind.data.frame, fangraph_dfs)

league_whip <- dplyr::select(league_whip
              , `Year`="V1"
              , `K/9`="V2"
              , `BB/9`="V3"
              , `GB%`="V4"
              , `HR/FB`="V5"
              , `OPS`="V6"
              , `ERA`="V7"
              , `WAR`="V8"
              , `LEAGUE_WHIP`="V9"
              , `League`="V10")


## Joining Data Together
Lahman_df <- Batting %>% 
  dplyr::filter(yearID >= 2010 & yearID <= 2020) %>%
  dplyr::inner_join(People, by="playerID") %>%
  dplyr::mutate(FULL_NAME=paste0(nameFirst, " ", nameLast)) %>% 
  dplyr::inner_join(fg_batting_df, by=c("FULL_NAME"="Name", "yearID"="Year")) %>% 
  dplyr::inner_join(league_whip, by=c("lgID"="League", "yearID"="Year")) %>%
  dplyr::mutate(BMI = round(703 * weight/((height)^2), 2)) %>% 
  dplyr::select(
    Name=FULL_NAME
    , Year=yearID
    , Age=Age
    , Bats=bats
    , BMI=BMI
    , Team=teamID
    # , League=lgID
    , `League WHIP`=LEAGUE_WHIP
    # , `Strike Outs`=SO
    # , `Intentional Walks`=IBB
    # , `Hit by Pitch`=HBP
    # , `Strike Out %`="Strikeout%"
    # , `Walk %`="Walk%"
    , OPS=OPS.x
    # , `Groundball %`="GroundBall%"
    , `Out of Zone Swing %`="OutsideZoneSwing%"
    , `Swing %`="Swing%"
    , `Hard Hit %`="HardHit%"
  ) 

```

  
* Player Age
* Bats Left/Right/Switch
* BMI
* Swing %
* Outside of Zone Swing %
* Hard Hit %
* Combined Walks Plus Hits per Inning (WHIP) per League  \par

\breakline

# Data for the Analysis
  Data for the analysis was found in multiple locations, the R CRAN package (Lahman) @Lahman, and also online on FanGraphs.com, @fangraphs. For the FanGraph data, there is a tool that allows you to select the statistic and year desired. The result was then exported and saved as a csv file. CSV files were exported for years 2010-2020 and then R was used to read and merge the files into a single data frame. Below is an example output of the data that will be used for this analysis.

:::{custom-style="Compact"}
Table 1

*Example Data Set*
:::
```{r, echo=FALSE}
FitFlextableToPage <- function(ft, pgwidth = 6){

  ft_out <- ft %>% autofit()

  ft_out <- width(ft_out, width = dim(ft_out)$widths*pgwidth /(flextable_dim(ft_out)$widths))
  return(ft_out)
}

head_df <- head(Lahman_df, 15)
tail_df <- tail(Lahman_df, 15)

FitFlextableToPage( fontsize(theme_vanilla(flextable(rbind(head_df, tail_df))), size=7, part="all") )
```

\newpage

# Plots & Tables Needed
  For analysis, the below output may be useful to help determine and assess any correlation effects and run diagnostics on the data.

* Scatter plot of predictor variable vs. outcome and residuals vs. outcome
* QQPlot of predictor variable data and residuals of model
* Histogram of predictor variable data and residuals of model
* Residuals vs. Fitted
* Scale-Location Plot
* Residuals vs. Leverage
* Combined Data Frame Table
* Linear Model Line for predictor variable vs. outcome


# Visualizing the Data
:::{custom-style="Compact"}
Figure 1

*Histogram of OPS*
:::

:::{custom-style="Table/Figure"}
```{r, echo=FALSE}

Lahman_df %>% 
  ggplot(aes(x=OPS)) + 
  geom_histogram(col="white", binwidth = .01) + 
  labs(x = "OPS\n(Bin Size = .01)", y = "Frequency")

```
:::

\newpage

:::{custom-style="Table/Figure"}

:::{custom-style="Compact"}
Figure 2

*Age vs. OPS*
:::

```{r,echo=FALSE, fig.height=3}
ggplot(data = Lahman_df, mapping = aes(x=Age, y=OPS)) + geom_point() + geom_smooth(method = "lm", formula = y~x)
```

:::{custom-style="Compact"}
Figure 3

*BMI vs. OPS*
:::


```{r,echo=FALSE, fig.height=3}
ggplot(data = Lahman_df, mapping = aes(x=BMI, y=OPS)) + geom_point() + geom_smooth(method = "lm", formula = y~x)
```

\newpage

:::{custom-style="Compact"}
Figure 4

*League WHIP vs. OPS*
:::

```{r,echo=FALSE, fig.height=3}
ggplot(data = Lahman_df, mapping = aes(x=`League WHIP`, y=OPS)) + geom_point() + geom_smooth(method = "lm", formula = y~x)
```

:::{custom-style="Compact"}
Figure 5

*Out of Zone Swing % vs. OPS*
:::

```{r,echo=FALSE, fig.height=3}
ggplot(data = Lahman_df, mapping = aes(x=`Out of Zone Swing %`, y=OPS)) + geom_point() + geom_smooth(method = "lm", formula = y~x)
```

\newpage

:::{custom-style="Compact"}
Figure 6

*Swing % vs. OPS*
:::

```{r,echo=FALSE, fig.height=3}
ggplot(data = Lahman_df, mapping = aes(x=`Swing %`, y=OPS)) + geom_point() + geom_smooth(method = "lm", formula = y~x)
```

:::{custom-style="Compact"}
Figure 7

*Hard Hit % vs. OPS*
:::

```{r,echo=FALSE, fig.height=3}
ggplot(data = Lahman_df, mapping = aes(x=`Hard Hit %`, y=OPS)) + geom_point() + geom_smooth(method = "lm", formula = y~x)
```

\newpage

:::{custom-style="Compact"}
Figure 8

*Bats vs. OPS*
:::

```{r, echo=FALSE, fig.height=3}

ggplot(data = Lahman_df, mapping = aes(x=Bats, y=OPS)) + geom_boxplot()

```

:::

# Model Selection

  Because data for OPS appears to be normally distributed and linear when compared to the predictor variables which are primarily continuous, I will perform a linear regression analysis. Also, because the variable 'Hard Hit %' appears to have a strong linear correlation with OPS and is continuous, this further strengthens the hypothesis that a linear regression model would be a good fit for this data.
  
\newpage

# Linear Regression Analysis

```{r, echo=FALSE}
#
## Remove 'Name', 'Team', 'Year' columns from Data Set
Lahman_df <- dplyr::select(Lahman_df, -`Name`, -`Team`, -`Year`)

## Create Training and Testing Data Sets
smp_size <- floor(0.75 * nrow(Lahman_df))
set.seed(777)
train_ind <- sample(seq_len(nrow(Lahman_df)), size = smp_size)
train_df <- Lahman_df[train_ind, ]
test_df <- Lahman_df[-train_ind, ]

## Turn 'Bats' in factor
Lahman_df$Bats <- as.factor(Lahman_df$Bats)
```


## Regression with All Predictors (lm1)
  
  * Age
  * Bats
  * BMI
  * League WHIP
  * Out of Zone Swing %
  * Swing %
  * Hard Hit %

:::{custom-style="Compact"}
```{r, echo=FALSE}
lm1 <- lm(OPS ~ ., data=train_df)
lm1_summ <- summary(lm1)

lm1_coef_df <- data.frame(lm1_summ$coefficients[-1, c("Estimate", "Pr(>|t|)")])
lm1_coef_df <- select(lm1_coef_df, Estimate=Estimate, `P-value`=`Pr...t..`)
lm1_coef_df$`P-value` <-  round(lm1_coef_df$`P-value`, 3)
lm1_coef_df <- setDT(lm1_coef_df, keep.rownames = "Variables")[]
lm1_coef_df$` ` <- ifelse(lm1_coef_df$`P-value` < .001, "***", ifelse(lm1_coef_df$`P-value` < .01, "**", ifelse(lm1_coef_df$`P-value` < .05, "*", "")))

lm_model_df <- data.frame(
  call = paste0(lm1_summ$call[1],lm1_summ$call[2])
  , fstat = lm1_summ$fstatistic[1]
  , adj.r.squared = lm1_summ$adj.r.squared
  )
```

\ 

:::{custom-style="Compact"}
Table 2

*Linear Model All Predictor Summary*
:::
```{r, echo=FALSE}
FitFlextableToPage( fontsize(theme_vanilla(flextable(lm_model_df)), size=8, part="all") )
```
:::

\ 

:::{custom-style="Compact"}
Table 3

*Linear Model All Predictor Coefficients* 
:::

```{r, echo=FALSE}
FitFlextableToPage( fontsize(theme_vanilla(flextable(lm1_coef_df)), size=8, part="all") )


```


\ 

  After initial regression analysis with all variables, there are some that are not significant meaning that it is likely that there is no effect on OPS and gain confidence in accepting the NULL hypothesis that these variables likely have no correlation with OPS. For the next step these variables will be removed.


## Multiple Regression Step 2 (lm2)

* League WHIP
* Hard Hit %

:::{custom-style="Compact"}
```{r, echo=FALSE}
lm2 <- lm(OPS ~ `League WHIP` + `Hard Hit %`, data=train_df)
lm2_summ <- summary(lm2)

lm2_coef_df <- data.frame(lm2_summ$coefficients[-1, c("Estimate", "Pr(>|t|)")])
lm2_coef_df <- select(lm2_coef_df, Estimate=Estimate, `P-value`=`Pr...t..`)
lm2_coef_df$`P-value` <-  round(lm2_coef_df$`P-value`, 3)
lm2_coef_df <- setDT(lm2_coef_df, keep.rownames = "Variables")[]
lm2_coef_df$` ` <- ifelse(lm2_coef_df$`P-value` < .001, "***", ifelse(lm2_coef_df$`P-value` < .01, "**", ifelse(lm2_coef_df$`P-value` < .05, "*", "")))

lm_model_df2 <- data.frame(
  call = paste0(lm2_summ$call[1],lm2_summ$call[2])
  , fstat = lm2_summ$fstatistic[1]
  , adj.r.squared = lm2_summ$adj.r.squared
  )

lm2_adj_r_squared <- lm2_summ$adj.r.squared
lm2_hard_hit_beta <- lm2_summ$coefficients[3,1]
lm2_hard_hit_p <- lm2_summ$coefficients[3,4]
lm2_hard_hit_p <- ifelse(lm2_hard_hit_p < .001, " < .001"
                         , ifelse(lm2_hard_hit_p < .01, " < .01"
                                  , ifelse(lm2_hard_hit_p < .05, " < .05", "*Not significant")))
lm2_league_whip_beta <- lm2_summ$coefficients[2,1]
lm2_league_whip_p <- lm2_summ$coefficients[2,4]
lm2_league_whip_p <- ifelse(lm2_league_whip_p < .001, " < .001"
                         , ifelse(lm2_league_whip_p < .01, " < .01"
                                  , ifelse(lm2_league_whip_p < .05, " < .05", "*Not significant")))

saveRDS(lm2_adj_r_squared, 'adjr.rds')
saveRDS(lm2_hard_hit_beta, 'hard_hit_beta.rds')
saveRDS(lm2_hard_hit_p, 'hard_hit_p.rds')
saveRDS(lm2_league_whip_beta, 'whip_beta.rds')
saveRDS(lm2_league_whip_p, 'whip_p.rds')

```

\ 

:::{custom-style="Compact"}
Table 4

*Linear Model Minimal Predictors Summary* 
:::

```{r, echo=FALSE}
FitFlextableToPage( fontsize(theme_vanilla(flextable(lm_model_df2)), size=8, part="all") )
```

\ 

:::{custom-style="Compact"}
Table 5

*Linear Model Minimal Predictors Coefficients* 
:::

```{r, echo=FALSE}
FitFlextableToPage( fontsize(theme_vanilla(flextable(lm2_coef_df)), size=8, part="all") )
```

:::  

\ 

## ANOVA 

:::{custom-style="Table/Figure"}

```{r, results='hide'}
lm_anova <- data.frame(anova(lm1, lm2))
```

:::

:::{custom-style="Table/Figure"}

```{r, echo=FALSE}
message("ANOVA: ", ifelse(lm_anova$`Pr..F.`[2] < .001, "Is significant at p < .001", ifelse(lm_anova$`Pr..F.`[2] < .01, "Is significant at p < .01", ifelse(lm_anova$`Pr..F.`[2] < .05, "Is significant at p < .05", "Not Significant"))))

```

:::

\newpage

## AIC

:::{custom-style="Compact"}
Table 6

*AIC Table* 
:::
```{r, echo=FALSE}
model_list <- list()
model_list[[1]] <- lm1
model_list[[2]] <- lm2
model_names <- c("lm1", "lm2")
```
```{r, echo=FALSE}
aic_summ <- data.frame(AICcmodavg::aictab(model_list, modnames=model_names))
```
```{r, echo=FALSE}
FitFlextableToPage( fontsize(theme_vanilla(flextable(aic_summ)), size=8, part="all") )
```

\ 

  After running linear regression analysis using all predictor variables and again using only significant variables from the first analysis, the adjusted R squared value dropped by .02 which is very small however the F-statistic increased significantly from 91 to 340. After running ANOVA and AIC, it was found that the simpler model was a more significant but has a slightly higher AIC score. Because a simpler model is less likely to over-fit the data and have multicollinearity, the simpler model will be selected. The slight benefits of a better prediction with a more complex model does not outweigh the benefits of a simple model that is slightly less accurate but less likely to over fit the data or run into diagnostic testing issues. The complex model would only be chosen if it were significantly better at explaining the outcome variable.

\newpage

# Cross-Validation
Now that the model has been determined, diagnostic testing on the model will commence to determine if it would be effective at generalizing or predicting the population. For linear regression, there are some assumptions that need to be tested listed below.

* Linearity
* Normality of residuals
* Homogeneity of residual variance
* Independence of residual errors

\ 

:::{custom-style="Compact"}
Figure 9

*Diagnostic Plots for Linear Regression* 
:::

## Diagnositc Plots
```{r, echo=FALSE, fig.width=10, fig.height=7}
par(mfrow = c(2, 2))
plot(lm2)
```



## Variance Inflation Factor (VIF)
```{r, echo=FALSE, fig.width=10, fig.height=7}
car::vif(lm2)
```

\ 

## Diagnostics Summary
After reviewing the diagnostic plots and Variance Inflation Factor (VIF) in R, nothing stands out as concerning and we gain confidence that the model would be good at estimating a population.

\ 

# Testing Accuracy of Model

:::{custom-style="Compact"}
Figure 10

*Trained Prediction on Train Data* 
:::

:::{custom-style="Table/Figure"}

```{r, echo=FALSE, fig.height=3.5}
train_df$prediction <- predict(lm2, newdata = train_df)
train_mse <- round(mean((train_df$OPS - train_df$prediction)^2), 4)
ggplot(train_df, aes(x=prediction, y=OPS)) + 
  geom_point(alpha=.5) + 
  geom_abline(color = "blue", size=1.5) + 
  labs(title = "Train Data", subtitle = paste0("MSE: ", train_mse), x="Prediction")
```

:::

\newpage

:::{custom-style="Compact"}
Figure 11

*Trained Prediction on Test Data* 
:::

:::{custom-style="Table/Figure"}

```{r, echo=FALSE, fig.height=3.5}
test_df$prediction <- predict(lm2, newdata = test_df)
test_mse <- round(mean((test_df$OPS - test_df$prediction)^2), 4)
ggplot(test_df, aes(x=prediction, y=OPS)) + 
  geom_point(alpha=.5) + 
  geom_abline(color = "blue", size=1.5) + 
  labs(title = "Test Data", subtitle = paste0("MSE: ", test_mse), x="Prediction")


```
:::

\ 

# Interpretation
  After analysis, both League WHIP for pitchers and Hard Hit % were found to be positively correlated with OPS. This meaning that as the overall Walks Plus Hits per Inning rises overall for pitchers in a players League that the OPS likely will rise. Also if a player hits the ball harder, regardless of where it goes, this is an even stronger indicator that OPS will likely rise. 


\newpage
# References

\begingroup
\noindent
\vspace{-2em}
\setlength{\parskip}{15pt}

<div id="refs"></div>

\endgroup